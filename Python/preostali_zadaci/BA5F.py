"""
A solution to a ROSALIND bioinformatics problem.
Problem Title: Find a Highest-Scoring Local Alignment of Two Strings
Rosalind ID: BA5F
URL: http://rosalind.info/problems/ba5f/
"""
def alignRecontructionMoves_local(backtrack,n,m):
    taxi_position=(1,1)
    moves = []
    while n > 0 or m > 0:
        moves.append(backtrack[n][m])
        if backtrack[n][m] == "D":
            n = n - 1
        elif backtrack[n][m] == "R":
            m = m - 1
        elif backtrack[n][m] == "Diag":
            m = m - 1
            n = n - 1
        elif backtrack[n][m]=="Taxi":
            taxi_position=(n,m)
            m=0
            n=0

    return moves[::-1],taxi_position


def moves_to_strings_local(first_word, second_word, moves,taxi_position):
    pointer_w1 = 0
    pointer_w2 = 0

    w1 = []
    w2 = []
    for move in moves:
        if move == "D":
            w1.append(first_word[pointer_w1])
            w2.append("-")
            pointer_w1 += 1
        if move == "R":
            w2.append(second_word[pointer_w2])
            w1.append("-")
            pointer_w2 += 1
        if move == "Diag":
            w1.append(first_word[pointer_w1])
            pointer_w1 += 1
            w2.append(second_word[pointer_w2])
            pointer_w2 += 1
        if move == "Taxi":
            pointer_w1 += taxi_position[0]
            pointer_w2 += taxi_position[1]

    return "".join(w1), "".join(w2)

def localalignment(first, second):
    s=[]

    for i in range (len(first)+1):
        s.append([])
    s[0].append(0)
    #first column
    for i in range(1,len(first)+1):
        s[i].append(max(s[i-1][0]-5,0))#sigma=5
    #first row
    for j in range(1,len(second)+1):
        s[0].append(max(s[0][j-1]-5,0))

    newFirst=""
    newSecond=""

    Backtrack=[]
    for i in range (len(first)+1):
        Backtrack.append([])
    Backtrack[0].append('')
    # first column
    for i in range(1, len(first) + 1):
        if s[i][0]==0:
            Backtrack[i].append("Taxi")
        else:
            Backtrack[i].append("D")
    # first row
    for j in range(1, len(second) + 1):
        if s[0][j]==0:
            Backtrack[0].append("Taxi")
        else:
            Backtrack[0].append("R")

    penality = getPenality()
    index = getInedexOfLetter()
    for i in range(1, len(first) + 1):
        for j in range(1, len(second) + 1):
            s[i].append(
                max(0,s[i - 1][j] - 5, s[i][j - 1] - 5, s[i - 1][j - 1] + penality[first[i - 1]][index[second[j - 1]]]))
            if s[i][j]==0:
                Backtrack[i].append("Taxi")
            else:
                if s[i][j]==s[i-1][j]-5:
                    Backtrack[i].append("D")
                else:
                    if s[i][j]==s[i][j-1]-5:
                        Backtrack[i].append("R")
                    else:
                        if s[i][j]==s[i - 1][j - 1] + penality[first[i - 1]][index[second[j - 1]]]:
                            Backtrack[i].append("Diag")

    row_max=[0]*len(s)
    row_max_index = [0] * len(s)
    for i in range (len(s)):
        row_max[i]=max(s[i])
        row_max_index[i]=s[i].index(row_max[i])

    n=row_max.index(max(row_max))
    m=row_max_index[n]
    reconstr=alignRecontructionMoves_local(Backtrack,n,m)
    newFirst,newSecond= moves_to_strings_local(first,second,reconstr[0],reconstr[1])
    return str(s[n][m])+"\n"+ newFirst+"\n"+newSecond

def getPenality():
    penality={
    "A":[2, -2,  0,  0, -3,  1, -1, -1, -1, -2, -1,  0,  1,  0, -2,  1,  1,  0, -6, -3],
    "C":[-2, 12, -5, -5, -4, -3, -3, -2, -5, -6, -5, -4, -3, -5, -4,  0, -2, -2, -8,  0],
    "D":[0, -5,  4,  3, -6,  1,  1, -2,  0, -4, -3,  2, -1,  2, -1,  0,  0, -2, -7, -4],
    "E":[ 0, -5,  3,  4, -5,  0,  1, -2,  0, -3, -2,  1, -1,  2, -1,  0,  0, -2, -7, -4],
    "F":[-3, -4, -6, -5,  9, -5, -2,  1, -5,  2,  0, -3, -5, -5, -4, -3, -3, -1,  0,  7],
    "G":[1, -3,  1,  0, -5,  5, -2, -3, -2, -4, -3,  0,  0, -1, -3,  1,  0, -1, -7, -5],
    "H":[-1, -3,  1,  1, -2, -2,  6, -2,  0, -2, -2,  2,  0,  3,  2, -1, -1, -2, -3,  0],
    "I":[-1, -2, -2, -2,  1, -3, -2,  5, -2,  2,  2, -2, -2, -2, -2, -1,  0,  4, -5, -1],
    "K":[-1, -5,  0,  0, -5, -2,  0, -2,  5, -3,  0,  1, -1,  1,  3,  0,  0, -2, -3, -4],
    "L":[-2, -6, -4, -3,  2, -4, -2,  2, -3,  6,  4, -3, -3, -2, -3, -3, -2,  2, -2, -1],
    "M":[-1, -5, -3, -2,  0, -3, -2,  2,  0,  4,  6, -2, -2, -1,  0, -2, -1,  2, -4, -2],
    "N":[0, -4,  2,  1, -3,  0,  2, -2,  1, -3, -2,  2,  0,  1,  0,  1,  0, -2, -4, -2],
    "P":[1, -3, -1, -1, -5,  0,  0, -2, -1, -3, -2,  0,  6,  0,  0,  1,  0, -1, -6, -5],
    "Q":[0, -5,  2,  2, -5, -1,  3, -2,  1, -2, -1,  1,  0,  4,  1, -1, -1, -2, -5, -4],
    "R":[-2, -4, -1, -1, -4, -3,  2, -2,  3, -3,  0,  0,  0,  1,  6,  0, -1, -2,  2, -4],
    "S":[1,  0,  0,  0, -3,  1, -1, -1,  0, -3, -2,  1,  1, -1,  0,  2,  1, -1, -2, -3],
    "T":[1, -2,  0,  0, -3,  0, -1,  0,  0, -2, -1,  0,  0, -1, -1,  1,  3,  0, -5, -3],
    "V":[0, -2, -2, -2, -1, -1, -2,  4, -2,  2,  2, -2, -1, -2, -2, -1,  0,  4, -6, -2],
    "W":[-6, -8, -7, -7,  0, -7, -3, -5, -3, -2, -4, -4, -6, -5,  2, -2, -5, -6, 17,  0],
    "Y":[-3,  0, -4, -4,  7, -5,  0, -1, -4, -1, -2, -2, -5, -4, -4, -3, -3, -2,  0, 10]
    }
    return penality
def getInedexOfLetter():
    index={
    "A":0,
    "C":1,
    "D":2,
    "E":3,
    "F":4,
    "G":5,
    "H":6,
    "I":7,
    "K":8,
    "L":9,
    "M":10,
    "N":11,
    "P":12,
    "Q":13,
    "R":14,
    "S":15,
    "T":16,
    "V":17,
    "W":18,
    "Y":19
    }
    return index
if __name__ == '__main__':

    x = '''MEANLY
PENALTY'''
    inlines = x.split('\n')
    first = inlines[0]
    second = inlines[1]
    res = localalignment(first, second)
    print(res)


    x='''AMTAFRYRQGNPRYVKHFAYEIRLSHIWLLTQMPWEFVMGIKMPEDVFQHWRVYSVCTAEPMRSDETYEQKPKPMAKWSGMTIMYQAGIIRQPPRGDRGVSDRNYSQCGKQNQAQLDNNPTWTKYEIEWRVQILPPGAGVFEGDNGQNQCLCPNWAWEQPCQWGALHSNEQYPNRIHLWAPMSKLHIKIEKSSYNRNAQFPNRCMYECEFPSYREQVDSCHYENVQIAFTIFSGAEQKRKFCSCHFWSNFIDQAVFSTGLIPWCYRRDDHSAFFMPNWNKQYKHPQLQFRVAGEGTQCRPFYTREMFTKVSAWRIAGRFAGPYERHHDAHLELWYQHHKVRTGQQLGIIWNNRDKTRNPCPFSAYYNKLPWWKINQNAFYNCLQNIAHSTHDETHEFNPVKCIDWLQGTMVPTECKKGFVHEKCECYRNPGPPLHDMYHQMEDIFGVRFDCLTGWKHLSDYNPCQERRNINDFYIFAYEIAPAVKNLVLSPQPLADATKKCAFNYTPLDQSPVVIACKWYIHQPICMLLIVLICAMDKYNAHMIVIRTTEGQQPMHACRMTEGPGMCMKEPLVTFTLPAQWQWPNHEFKYVYMYVLNYHLSQYTYTDEGHAGGQHYSFNVAVDVGMAWGHNRCYCQPACYSQQETQTRTIDYEKWQYMKHQAFKWGLWFCEQERHAWFKGQNRCEMFTAKMTRMGADSNLDQYKLMLAQNYEEQWEQPIMECGMSEIIEIDPPYRSELIFTFWPFCTYSPWQNLIKCRCNNVIEEMDQCVPLTFIGFGVKQAGGIQAWAFYKEEWTSTYYLMCQCMKSDKAQYPYEIILFWMQPMDTGEQEPPQQNMWIFLPHSWFFDWCCNAPWSEICSSRHDHGQCQDAFYPCELFTVFDDIFTAEPVVCSCFYDDPM
WQEKAVDGTVPSRHQYREKEDRQGNEIGKEFRRGPQVCEYSCNSHSCGWMPIFCIVCMSYVAFYCGLEYPMSRKTAKSQFIEWCDWFCFNHWTNWAPLSIVRTSVAFAVWGHCWYPCGGVCKTNRCKDDFCGRWRKALFAEGPRDWKCCKNDLQNWNPQYSQGTRNTKRMVATTNQTMIEWKQSHIFETWLFCHVIIEYNWSAFWMWMNRNEAFNSIIKSGYPKLLLTQYPLSQGSTPIVKPLIRRDQGKFWAWAQMWWFREPTNIPTADYCHSWWQSRADLQNDRDMGPEADASFYVEFWYWVRCAARTYGQQLGIIWNNRLKTRNPCPYSADGIQNKENYVFWWKNMCTKSHIAFYYCLQNVAHYTHDVTAEFNPVKCIDWLQGHMVLSSWFKYNTECKKLFVHEKCECYRMFCGVVEDIFGVRFHTGWKHLSTAKPVPHVCVYNPSVQERRNINDFYIFYEIAPAVKNLVLSAQPLHDYTKKCAFNYTPITITRIISTRNQIIWAHVVIACQFYSPHQMLLIELAMDKYCADMNVRRSTEGHQPMHACRSTFGPGMAAKEPLVTFTLVAFWQWPNHEFQYVYMYTEDKIIQIGPHLSNGCEMVEYCVDCYAKRPCYRAYSAEAQYWRMITEAEDYSYKTRNAIAATATVRGQYCHPFRWLGIVWMAHHDCFFANECGTICIPQMAEMRPPETTPYEIDIIFMMFWKEHMSTTILDVVGMYRPATFSHWHDAHHQCEPYLTPLMCQSKLVFDAAFTQVGVKGVWYHTEKLELMAGFNHMKFKKEEAQQSCFYWFQDCPDYDPPDAVRKTDEKHIRAHGEIWWLMRYYCMYHILHIASRHEWMHLRWDQACTNPGYELFEFIPWVLRRYVVYDKIRYNYSYRNSASMEFV'''
    inlines=x.split('\n')
    first=inlines[0]
    second=inlines[1]
    res=localalignment(first,second)
    print(res)

    x = '''KACFCNHTIVLPYSNAFYFSPWPNSDLVRQNAESYCSWTANFMDLFHLVHFIFSECYICGHYEQLGHSVERGIANILIPTRYKDFMMCVCYMDKTATAAKHLHYNRNAMRGASKWQWMDQDTFGAMSSQALYMECPAHCAVNRMRNLCVCGHNDYIPLQKMCMKPVHRMRRPMNLQRHWVYHWPWVDDCFKYKAFICGNALRVCYDQWVMTLFKVVHQPRMGDHVTVYNDCSCDIAYHEFFHRIYQDMHMNYNHSDGKHLFWFYMRYKGGYGRHRCGWTNKWNENAVQHRECSHQHPHTFHRDIHVVWCAVAVNSNCIIPTGQFEETMAMHVWYLSDYPVTSTQAQWKATAEATNARRNWAFDCSCWCRHPWLACFNDVDTTARVYYLQRWFAKCRFVRLSQYADQLKGTTWWTAASFPEKTETTPTWWMVFKHFPDLHQAEDHSDLDLYDDLKRWNDTGFWLTKYMASYTSARFPQDNYPQVQRTHWVGHWLGVYFEARGYRERAHPMGSLYGKNWEMWHKINCAQRRWSYQGGMPQSHDNCQIIHCSGNMEHMESINDKFWHYPICWPTLPAVMWWTPARTEPQQGQTNHIQIATAISAHQKPRQWKYKDILSPGQKTLYIHPVQYLFATAVVRNCWTELYDFHERSINGGGCGEVKWYQNDVYYEKYMEMKYQEMMKMTCTCMKEHDAQCYMNWSQNEWIAVFPKNLMMKPCTCVKCFNYSKYPCIDREKIAIWVMYMNFQTNLQFQQEERMLWRAANKYWGYPRVWWYHLWDFHKFGAYPLDIHCQAYYHMPYAFRIITFNVFHDKVMDSMDHWIRFDDRQQSAEMLHISVCFIHYGCGHWNAARENHRGNDEEYKIKTIFNSRCAYMAYVCNDPFRLASFHPWASNRLFYYTHMANKCCGMMWRQSWKVVQHAVYGGMFHCIAVYHCLRNPRHCWFNWGDGGEREYRGSKPEIKFRDYYARAAVEVKVLGILGPWNSHWDVGYAFAMQGFHTDPESNKYCMQLSTSVFSQNWIHSKIPFFTEFTARHVFYDSDCFPTPWQMGVSFWRCRHALISFNVPYEDDLVICAQENEKHLIKCPRSTWCYCDMLFHLPNPYPRIQANFTDLNRVWDIRFNPAAVFDRTMAEVLVPTKYQSEIYSGRVGGCCITHIETSWKKLSSDRCGEPGASKRGVKSVHSGYGELPWISHVGECNCIMHYFPNYHCPITWFLNHKEQRAFCWDQFKQVKGHKWMKILPQFSYSWRPDKRCDGIMEGQMFYFRRWPNGRTPIVLPVRWIKTKFRRAHSTVDKVYIIDNQTAQKHRYLQVIDGDYGCQIEAWVMNDKRKNNCEQIYMMHMYIMACITWQQIAFAIWSHVNNFCKVSWLPLCWIEDNIVGMRIHNRKTKPCKFFEYLPQPCKWIFQTEDSFFHPGSHFPQCVGCAYLKNHLWHCHAQWPHLMGKAWRRTWNKHGVEYEYPAGPSYAYKELAYCYDRMEAMPCEESGDNRETACEKKSGVFFASFQQKNVTCFRVMHEDAHMCCSQEYADDVWYDNNDMIEKDACRMGELWLFQNFLSGCLMLETNDPQCNEKNKLNTRVFQCHGRGLYFPPWGATMTEPIDMCDVKKCLDREATLNYCFWKRVGVHQDSKSHRPGDKYTEVGVCPAWLSIYACTVFFYPFYVGPSCIMVDFNDRYCMRHQPKKSLGIWASSDNYVVTMCREDIPPCFMWNWNSASTTSWFSKQMANLYTWMAGYYMKSRVGWPWMMFKAHCRHDWNIEWAYYHKRGPHMMCAKIKESTAKHYRLCYPSYAPGRQRCYHICHMAMVTFYIWLMVAFWRKTMTFLTKCGKPGIFPLLTQQLHNDDEWCAKEQTHAFQEWHESIPCLYPMSLAGTKEWAKVAFKFDVNLQCEVWQFHDRFCSKWFFAFNELFLRVTFIFIQITKYNHEKDFGLELPCWQVFMCYENFPIGYIIPCTTDNLRNLLKPYDNVPVSRCSSAKTMEQWDDASDAIKTGDAMTSDHLYSMRVYPDYCSYIASWMYCVIEQYYMPEHNYLYKRSWCKPDWVGFKQHPHKAFIKSFSRIDPTHTHIAPGNLFCQNTQWEFARGNTSAAKCLACQLDCLPELVSNLLQMEHLKCIWCECANDRLGTTLRTRKIRLDPMHIWNELARTIEHHTKNLKFDHSNTPNMRCTLHGSHMCEYSHIGSYRHRQCTAEKSDNPGYGCLFARMESCACAQKRHYGFCVPVCHRKQDRKYFPDYFKIVIGIEGEQVQVAQINWIGWCANMENQQPTPYQPEYHGPAQITKWEISMKLDRDLHPEPGGGWKWDINLFIFLLCIHQDCWESYAMNGPLCHMRKGHKVMIESPEVPFDMHVEKCMTRNPCWPMMHGWEHRDARPLYAICPYVEFTSRWDAIHVSPGAACQCNVTGEIYGICRICRSLKRGDYKPNWKGDGQYAVSGDYVLSQDAGNGLRGDDMHEDDRDYPMRHNNKYDSRYIFNMMTQKQWPYARHTSAPKIKEQLLYQGCFCYASGTSRMSQQALYESLAQLKCHCQPGSFEEQQFAFVPFMCECRDIMHYQSHNGMSQTERDRCGLSTCTNLWKNMAWVPAYSLMNWSWGEEFISKTSVCVCLTPCFALEYWDCINQRMIWWESVKGVYCLELCARACVKQFGFNDPPCFYFYPALHDEGKMDMEAMQALFKYPRSIAIARLHGIACPLTYNWLVGHNWQWI
TFPMCKMFRWPLHQKTNETFVSPDRVHKGWQNRQHKNNMLRGTYMNGTPHRKLNENHFPPGEGYGHCDGHDRDYNCPTANVCYWKWLRVLIHPGTCPVTFLESNEEFNCVEAEDMAANVYQDNDHFTYPIVRTPRMMDTESLCHHTMLANSDTCVEVDQNQSQEDVGSSCKANMRGCWYFINYPRSHERIGHHFKSWHYAFTSMSNPKRSWDSNKAKGPETVGKQGHLQKDPTDKPDKLTSSSEESWNCHYNRMFQQLPPFMSTDFTKIPLNNCVIAFPETQLHICRTMHNWKCGDKDDDIFCSWSSHCNQHKFPWCFKFWEVTSHDKHNQWLFWGTIGAMFIYQEHYYREDIYHTKRCDDLSRYSIMRFCDDFDWGGEMPWVWAGGEYIRKVKFWPTHWLGRELCKLQNIKVPSVGWPCCYEQAYPFCVWMCTNRPFVFTWQCKFPHAEIRMGQTNLWINQLYFQNRTMDQCMRTINWEWVEPWRLCQHMFIMWQNRIYTRSNKHKHNEWYNECPADRKQRFRIASECDSVQETQNPVAWAMPWYQKAKMVHPSVDWDTYWKTMLKPDSHSYELKFSDDVCPRRIKEWPWGKTLKRIEGRRIMVWWVHYLREDRYTLNVEYYETFQCKAGCGYHHTQSRQAPERQYCGGKRPLNLHAYLGMRLSDKCNWEDYSEALMIEPPNFHDEVERENLFCYHSYVQSVNSRPNKEPITNQDAYYESYCWYSQKQTPDRNMHHHHGAELHGHPDKWNMQYAIPVQHDLRTFVVVPNWCKKKFGTSEKHAQWRFRVVINWTFNQFHLYMFYAKPMDSHGDRYFTNCTFGSRNNSAECGCCLHASVCSIHYGCGHWNIYDASNENHRGNDNTEPGEYKIKTIFNSRCAYMAAVGFQFHDFRAMLEHYWASNRLRYYTHMANKCCGMSWKFHCIAVWKDNLWHAHCLRNPRCGKCFFNWGDGDGSCDEREYEGSKPEIKFRDYVEVKVLGILGPWNPHSDVGYAFAMKMLQCTIMFHTDPESNKYMAEMQLQCIFDGGSQNRSHCRIYSKYCELKGCPIFVFWVHSHDGNMNTRGWMIVARHVFYDSDCFPTQSSWPWSMGVSFPERCRHALISCVPHDLVICQQEALIKWWSWDRKFHFNLFTLPNPYPRIQATSSDLLNRMVHCEMYGVWVIRFNPAAGPTAEMPLILNIMVKFTDLTKYQSEIYSGRVGGNCITHIETCSYIQFQDWKKLSSDRCGMAMISRPGASERGVKSVHSGYGELPWISHVHECRVNCIGDKYSMCHYFPNYHCPITWFLNHKTKVHGRAFFWDQFKQVKGHCWHKQQVRILDIFTFMNPQFSHSWRPGGRAWGDDGMDFSMINMEGQMFKWYRWPNGVLPVRWDKTKFAHSTVDKVDITAQKHRYLQVDYGCQIEAWNAQMNDKRKNFTLFDWGERCCQIYMMHMYIMACITWQQFCKVSWLPLCHISTFYDENISGMRIHNRKTKPCKFGEYLPQPCVTIETIDWIFQTEDSFFHPYLSECTFVCVGCAYLKNHYRAQWHHLMGKAWTHMGFFRTWNKHGVEYEFLQTPAGPSYSAQYYICQGHRMEAMGDMNRDTACEKKDYFERAFDYGVFFAFFAQKNQQCYRVMHEDAHMCYYDQASEFEYADDVWDWCRQDNNDMIEKDACRNFCAAPFLSGCTCLMELETCWTNTLFEFQCHGRGLYFPPWGDPVWYITMIDMVKWCLDREFYSTFVLNHIQMHNYCFWKRGGVHQDMKSHDFRHLGTYHDYLFCNSLGIRQSISLVNCPIYAMVLVKACFETLTSCECPPKSASSDNWVFPCFMWNWDSSASTRFMNPYNSEFTWMAGYMMFKAMCRHQCEAMQWNIEWAYYHMANFCRAGSYVWPHMEKHYYAPGRQRCYHICHMAMMVAFWPSWRAGRTKCGLTESNNQLCVFILHEGACFQEWCESIPCLLPGLERSPMCCDGEQGEDPFLMDPANDPSADQEHAMDHGPWQNFNGDFTVIDYCAMTVEGILVPEECRKDLIHVGSLRHLWFTSSPMNWDPHNSTHAFAKITFSMGHSKICSRSLFVAQFVNLVNNAVLVQPTNFLIAGVGCPYQSYDDYIECHTNHARVLHPEYSLTDEYSEIGFKHDDVYVSMRTLETGRTRSWWDWWLCIALNSTAFIYQCYSYDYFIRFMNDTEVTAWWLCQKSIPGKHPTENNWQMSQYVIRYARLPREPIVDYKATPHRLDDLCMYWGKVAGSPTKIVFDGMIAYTEPGNGLCENFHTRLHTDGWEKRTFMCETWAKDVVRFWLHWGNCSIGINMGNRYGCQYSLARPVYPKSSMTAVKDYEPTKRMDNHPQCCWDSFQKCFTDVVRGRDLQSEYSHQVTWEHEFYVWMATVLTIWHNHGIHTCDMICECYKQPGLDSSHKNKHTRNWHAGYHVLIDIVQGEIFMSPTVWHTMPMWVPRQLCEDETSPQDVPSFNCGKDACAAEWNFPYYTAMYSAYAWVMEMARMQESHLCGFSMCLAFNYEGCTLPCKYPKMWKMLGETLNMQCHIPWIQPRQQPLLNYACYSKESIITRATEKCFVVQTKPVSISVAAVGYIYWMCQRTQYAGKCGQHMIKLNPCFRTWTEFIFVTRCSSYAPMIRPRHTECYMGTDAHPSNYHTRSPCWEQCWLVWVSKINGYKPRANMRYVFSDPDEGRKAKVTHCHHFFDQAANVGRPNYRVYEMFHMPLHAEIQKSARDLAIFTTNMGELIWEFQGRDVHLDKRQPWRKFFTENKLMKFSIRECKRWCSPEFFVSTYVHSDSERFRAMC'''
    inlines = x.split('\n')
    first = inlines[0]
    second = inlines[1]
    res = localalignment(first, second)
    print(res)


    x = '''KICPTAVKTHYIILITVHVYTDCCGKHRWTIHCENLEEDNMMPFYKQKLLAKFMWTVAAEQICMDYPHFCHINKLAVTKSLKGFADCTLHAKQPPDLHCDFRTVICHYRNWAQNYVQLRRHSIWDDDTFHLCTADLHYGSCASNKFKCPWMDERREVKKTDSFMSWYTQMPYDSQYEYAVKCFHDQPIEKWKKTPCVMGWLDKPQGMWHPIMWFPYIHMIWQTAVGHARHCWMYDKAKRFAAAQTQWNIQLVDQEIIQCYARSHDYEHYASDWFNKARLQGREQHKTNRPRFEYGPGCQKNNDSNYDDCMWLDSTCSPLQPAKLWHVTWWYTTMDVCYFAKIQPADIDSIERDNIDWTMNSAMAFYARQHFTDFLTPKNVFTPEHLYTEERALGNWANHVVTSYAGYLQKTRTANRYMAMCHPKLNNKYVHWYKKKTAAEDLHDNCQWQCPHYDFPEPGYSRKEFTRYEHMDCPMRIEFVHMFFYHMMANTWDVYAQGNECLPWQSMQICCIQNTNMCESGEEKGIMVPGDYCSHGYVVNAAVIDVNCFLHAAALNVYRDYNSCRCLIDMCKSTLITTRSKSFYVFHRMGHMVQCAVFSHEINQAYNLQWARQHLDFQIYNLEECKGCFVGKHWPQMYMNWPRYLDHGRQFGLTGTRLEQFNISSQERFGCYYNNADWVSGPYRATNYQRYYQDPRVFNPECHCRPYTFDPVWIEFTMSIGSQERDECSLERNDHFNDAEPSFELACTSVLKADFECHSNIAAHGEQSWFTYKVVEQGREDVAGNEQNPPPAGWVWSWDQKNVETQNCRLAVSEINTVNRTVVCWLHMEHECISQMIINNNCYVTNCAPSSKQRRWRAMYQTQEFWCHNLRQIFCLFWDQWDQKFDYKVCQMMAPLMPAALGSCDAWWFWYIQVDVHVHTPKVRFHGSCNGCNLLQAYYIFHYIPCNIFPYWHTMLPKMLICKAWQFIFRTQSLQQRKSPILAALKSRNADVLSAAHCDESPWIKKSEMRRNGNYGCDTMCWGNRIMGCWTTAQYGHYRLNFSMTFSHVKVHFWFTHKAWEAQNTVGAAEEFCLRHYNQQFCIRFRQSLQCLIHLCYTEWTFKDRKSFSQVPWQKPQEHMMCVYMQIDWRIDEFEPIYNQGPNVWWQNSHWNFKAPDINVLLIQKRASEPTWDVPSLNGHYAPKDITVAICDYCKILGVCDDGMKYAKFGTPLMMLYPFWLLLLFWPSWDTEEWDNLKLTQAEDIHRCQMCRKINVECGTNYWKLPPAYNLPDQCHQILMNYHNFLFSYIVSTQYKCCTQYAEICGLQRAHEIFYLHTCAEWGLCKKLWVTGMAQPDERVKGARGMHIDSEPYWNCNCVIIDMTMEYYITAPHNNWLKISRYFYILMVCFSEVAGVVHVEWLHEHMPTLRRDTYHEIDYQLDWINTAALTMMQDTCWGLLKSWMRDQSPLEGQYAMYACGCENQVQMAKRWKILVRDMWPFMQRERSEREMSMNQTYLPWMTHGIDDFNLVMQYLPYGQRVILRNEGSHVFVHLQWNVFCWFENRFQPHVTSFDCICMEQENWFEGDDHKLAAAAIDEFAMDMVQCEKKTQFTPEPKEPFYYFDCMYGELMVSTNKGRCDFKGFLWKSLRIPDFPPTHHKLIMNACSQAGRKITMTTDRIPMHICDRVFIIGSDCCLPEIAFAVPVGETCDENPERCFVDMPGYPPFNWTVQIVSVFQHHYFNLVHWVCPNQSSWMNYIEPIYCDRFDAEPADNYQLQDCFDLAHWTPMELWKFHTKYVFCSNHYWDSNHQKFVTSVPSPCINIMCRWPKKEHIRSRFEKEENWWIMFATKGYIVFFFMIRWYWTGSKSPFGYLQKFCMDLVHYQWCRSVECFNQYYVESAPEQDVGGFNMYGTGHMRHPLRQNPNSMLAHERSRMHSTPEQRVNSPKHYIFEEYWYHLCCTPGMVMLFMWRFGDSYMVSAIACPDEKDDCWYDNQAGDMSREPSKFWIFLTFPSEVCKLPFGFGQQVPQSFLTFCMYTAFTQQCANWFCEYHSRYPYYVYPARTNQSMWYDMSNPAMCNEQNRGDGRGKMFGRTFFEWDHRSNCNSENVRLVSGMSSSERSCYNLRNKRCTNMAFCQPIYSNFVANAYWKIRMPQVGAGSTLECDPLWNTVQMCHTKGSFFYMGPRPFLIVAAPVGPNGIRACRYRDVQEIPRADPLLYIWNMITWWKDWQCFSLWGFMMQRYSRREETVNCVFPCHNDILFGESNTMMPIWYYAWCNITRIFGPKNVDWYDGKVRRSMKTKQWCLWDYPACCNVLFWNDCEIYRVVDCHDQIRDWRGPWEFVQHTEMIKYRAEQKMPENDSVSTDQQMWNDVATCHFDKDGMCLCESTLAGCTMEFRYKLGIVGNDGYICHVAPWAWNPYQLNPRATLAFSQNNLESIKLGWGWWIYFWGAAGPFGKNFEEYRLQKGGDKCVSKWDFDCRSMVPEPRTRSNLMVSGHTRCQQEWYTYCQTFRIGGGGVINYYKKVTWELTHCRTIGNLFEQCEPTHLEVIKCCDAHDKYFIDKGRSCANISAIAHPNAMFFAAKWHKVQPFPEMAIRCVNQHMSLYCFTHRCPPLGESATTDAQPSFRMDPWSSSNHSEQRYNKGANHSMNVLNLHRWPRMFRWKHASIITIDLPHAMSEQYTCFRIVYIERVCWANKECKGGQVKCHNVFFNPHDNI
ELHQMLILRGYSLLFGADQGHNRVYNYPCFAIGHWNNHRLCPAQKPFWQSCELLNQQCHRQKTIQSNAHHNQGHPMMCMFIQEGAVHIGPTKDYQVSCMDPIWNNEQEEIWCINQFLRNHAMWEDQTVVAAIEFFLHKNMYKIFGQCTHADAGSYSWKTLCDNFYIYAINQWYIKMGSIGCQSKMEGIHWSEEMSQDGYRIVVFEKKTAMICRECCYTAFRDGNNVFRIRRCHPARVEDKIFNRLDICPIKGMQNQMHLYPCWIDSMSDRYCTFPRETEYSWFEYDRPVHGKHIPVGQPYGEMWMTWGVPLTYNCQVDSHTSHEDTKRSKETKMCNEACKFMFNWGLRHCTYQYDTKAMLWGSLVVFPQVSSMCNFDILHRMKQTQFSVYGKTVVCIQPTSSEQTMQNKSVQERFQYCFPRAGMLYQVKERYRPEYYQKYMFSTVRVGQEFRKTTKPKSAPSGTACRNFAMELCDDRDLDWVTGMMCAAYSNHKRDKVVKRVIHSLQVVEVRHYRRSMIAHSKLGSKQLSQDVYGIDTIDWFLFTWSIPGGSDKDEYTPMKRDPFNRAYQGWCWYWDTVNTSGLEVRGWAKGGEPDIWEMANKTWFVKYEYHCWVSKVAGHECQSLMRGWPRRRNTEPPCFIMRIKTLSSIHTNVQRGTTFFAFDMDRCERVHFRSWPYDLDDRHTEMYFMFIADSVWWMPYMWQWKHMATHTCWVSLGIMKDIGHQSIVHIYDNMCMFSQCYISRNFWNYVFDEDMRHACKAVNNYQRQWGQIGHETYRGMFLFVMFGHYISSNCDCEFHNFWDTNQSMRQPLKFGENDMATLWTITWEDSYITQYFNLFRLVLWHCANFMYHMEVTNRYHVFMGRKHDNWQGDDGPQCMVWYLHCITCKISAAYPPYQEEWCLFWDQWDQMFNYKVCQMMENTSPLMPAALWYIQVDVHNHTPKVRFAWGSCLLQAYYIFHYIPCNIFYWHTMLPKMLICKAWQIFRTMIHMLQQRTDGRRYTSVILAILKPQLCSRNADVLQCQYIDQAAHHFDYDESPWIKKSEMRRNNRIMHSCDCHWWSHYRLNTFSHVKVHFWFTHKAWEAQMSDRDNFCLRTYNQDFCIRFRQSLLCLIFREHATHLCYTEWTFKDRKSFSPWQKPQEKMMCVYMGIDWRIDEFEPIYNPRYTGPNVWWQNSHGVEDNFKAPDINVLLIQKRASEPGFHYAPKDITLLAILGDWCYCLMMLYPFLLFWPSWDTEENDNLKLTQAEDILRCQMCKVSGQEIGRKREFWKNCPMKYALFMYNQPHQCHQRLMNLHNFLFSYIVSTQYKCCTQYACSCGLQRAHEIFYLHTVAEWGLCKKLWVTGQPDMGARGMHIDSEYFFSKHKWNCWCVIIDYITAPHNNYLKISLNALWYFYILMVCFSEVAGVVHVQVHNHHEHLKDRDTSHEIDYQLDWENKIFMLGQEPYDDMWQDTSWGLLKKWMGHMHSGALGDQKNRTDEGGPLEGQYAMYNENTNCGCENQVQMAKIIPCIFHLWTYQRNKFPGFMQITLSVANDERHEGEMSMNQEIEYLWDLGFGNYGQYVILGFRRMQNEGSEVHLQWNVFPPVTSFDDESFCIDMEQENWFEYVMNIWLAAIDEFPMDMVQCEKATDFFYVKFYYKLPIDVFDDCSTNKGRCMFKVSLFLNYERFPPTHHKLIMNACSQAGRKITNMCSVPAQMTTDRILRCSDIAPWVFIIGSDCCLPSIAFAYYFPGRTCDENPERCFVMCEMPKYPQISSVFIHHYFNLVHWMNYIEPIYCDRFDAEPADNYQHNHDMLLHQDCFHATPAEMGQKNIPWCWKVHTKYVFCSNHYWDSNHQKVWNYVVTAKSPGPPARGKDQRKISWVVDGYKFMLMPLWACHWKPDIFSFSTPHADEMSIQGLRHCCLEFCETWAQAELINCMTNDNGLIHVLVCMLWNYRYVFMLAFHAWVHSFESAWTLWWVVRSVEQCHGTDTVHFQALECCYCIFDTQDMVKMRRLVGIIKYDNYDWNHNDELDWQYICKVIIFNQLGWHSTRSNPNEPTLVSPMLLWLTWADGGRYGYCLCMWVEIILWWFGKAQAEHDSWLYFMITLHHSSQPALGGIKAVSWTPIMAPYADYNSPRWRGPPHHGMPWGDFVVFIMLDRCGVAWGFFTWRRRRMQFGIAHIIYSPWCQFEPIRVCDGKATCWHEQMYIWQSLVGSCYRDVFSQVTCNRQCDQTADMSRTATHHLSEQHWSKAAWAWTKGIEIIYASLILDWRQYIYYQDLSHKARSFQRFPGKNINMMQIWLYKRMFNYVRDFVHFIKGLLADEKWFTWTDDNDSQRLFLIVNGVSSKPSVYYNDQLHDHPVMYPNFWEEGLEYCRNPLHTVQVLYSFWQHLRIWYDKMFWTMCFHEPTNVLCRDMEYFGPKHRCIRTDMWNPYHWFTDLYMQRKTQEMGMLMFPFMKHHVKTVQTYWLQVQRWKQCSFDKYQWSEIDWAIGRCFNETGTMLSHDRSRCRMGYWLMVKVWQCLLGIAYGERTQWMRVCIFWNWKASGESLGGFAHHHLYKSIEDSAAGGLFWSVNERLVEASTCIYMVLDPWETTYLDTYEPSWTFPRDSHSWRFDYWQVPDSRGAFRYHYSKITCVRDRFSMMWIQEGHGDDWYYLCVLRGCWTEMESFMKDAHVMFNHFVWQVKRPDLESCMKFKDYDEMAHGKCIWHDGRFKVPGTAMKT'''
    inlines = x.split('\n')
    first = inlines[0]
    second = inlines[1]
    res = localalignment(first, second)
    print(res)

    x = '''VIVYCWEQNEINCYTRFAMRPQEKINRSMGDHLSSEGHWIQLLKIIACKIQTVAKTCENQFTYTMGCLTKGFKPYLGMMHKVLNWMIDEHEQNYSFGMWPCQCGHAVYSCIRTFWKPDQHCFFIQWGDAYLCIPPDTPGDGMRWAFFLGQCKIGRWTIYCQVIDAMGHHDIGMKVNRAYQSQTQYNNYQWWPCGICKFMCRTTEFQHQHKRYVLNSISKGFNEECQPQDSHVWYRGIHINNPKKDESLMNEMRENKSFIQLPNRDFLDDGIFKHQALIMYCQKQYYMEWYHLTANAHLQHLMKASSTGVVGWMTCSYQNCPWMSPWEFLCIGGKGFGVNESVAVYDAARLMGIDDNQWNWCVFTTLAMDFLHLNYPVWFYFLREIQPRHIGMRGWMWDCHDTMTNSHACAYNLEAKQNAKERHENMCTFYYADHNYQKMTNGDEHVEAKQWAIPCQYMGFAKFWGGVVETGMYTWSCDQRPFSWEAVSRLHTTARHKVGSTWHVLVGSEMNKRWYSQKYGCCMYGQSYPFYHCTLLKHIINVRATFMKPHVMRFSMYFGWDITTEKKKQVSQQPGQTLQAQEQEYSPQTFVERSRQRLGEGFHTHRISSRWANHREANIEYKGELHQVHDKMYYFWKGFVFCYKLTRARDMAAALPKDMKDMNKGDGRIEWQFAWQMAQNYDQVNKPSWVCECPKQRRMGWCDQLWSLTQPIGDWAVHWKNVYDDKYMAWNTNCDICGKWNPMDWKYQGQPWTLQMGIRKNVLAGGGLMKKILRWDFHSQLDCHEIYNCMHQVLFQDFCGVFGGEDPLMVTDLHSGYWPGSDIAPGFMNAKNMGGRVGVFKMTEPIKRWYLADSGITCCLWKYWMWTSGDPKQEVQFGRDQDWDCQDDMCGRMPVYMVASDVIDIKPHLTLCRKCRIICGEPMLDTIRKPHVNQDRFCFFIDCEPIKEGEHYWIKPIKRDHARHGHNWGTNYRVTRTKNTPHGLGQMVHQCHLFHPRQPLFWKTAICETIEYHLPRILPFKHGSADRCIVGMAKFIKCFYAPDQYHTHCNQYLMLCEDQMQPKPCAVINADEVCNPDYTVLYTNPYDHEIKMSKDPVSHRYVVVMKNTDSEDKKPLMRFAWKNFAPCWLKVCGHKCWRITMEHELNAHHAMVDPNGEQHRQSCARITRCKGADIWDGWTPHLQKKKDNTMKFIWGCGCQFDEIHMTCFWVTPNPPYGLHLLLPFCWGSYLYQSETHKHTWRRPDIYGMVYMWFVWCDMAKVKSMMFGTCMHNLRTTGWWPFDPEIEDDHHTHSTIQFQWQHYQMEFPAVCGWWPSWIELSDAKNIMLYAPRYGLCSRGQPIYERWVPPSWMETFCNFWCNKHHTEIYDAPHSVMEYCGFLSEYHTPPYVMDKHYNVWIPKPPFNAFVENAHWMVRGEWSVVALVCCQGHYGGPSVHIHMCFQRIYRSLDDVMFFNITNPPLVFAAGFSTRLHAEGVSKFFQDAHIACEVTKCWGFGVNRHCNKCYDISWCFWGTLHAITLPMFTAMCIKNAFRRYPKKIYYAKHVHVGPATLGRKYTLHVAEFWYPWEHVWQWFVNLNPWAAGITSFGGWGCENSYTPPDGSDCRQRGKARSSMSKIYNENLWSAYSSHSRITTGISGMQATMGNVTHHLSCIGIVYRMNCGRKQYFCANQHDWEFNMLLTSGGMGMKAQGGEGDEWLMEDIVHIISVTQGMRQKDKMGDNHDDQKTSRQDKAFAFILVRDAMMDHMGWWSIHQNDIAFPVPATEMPFWINDGLVILIYEGLNRDEIFGIYVLPAEHIIFQHIGFNGPPNDGNNEIHPTLATWFEDYQYGLFNLQMWWRLQFMSESYADNTYDFHVYDKKQKGDEFHPCSNQMMHMRLQSVMIPIGMPSPMGRSRGAKALIEVMYFDYQEMDKLNSSHQKIGGKHFGQRGMHEPCFIRVLPNVRLEGVWWLMINTTEDTPWQAEHQFRVFTQDCPPVYPQGDCRVIRKRWAPYAKICMMKEANVMIGMKNNEFSMMIAAVVPHSMWNDQTDFVSHYNGTPNIGGTEAVPCGRNHEINTRFNEKHRTGLYSVYVVYRAHAYDAQLFFFSENHHWHRPIDSILCQFRVWCHYHSWAPHVVESPCYFDQCTWIRPSKLTSIEINNCLLMHGPTNCSCGDYINAWCSYNAKTYYCMPHAQGHTGMAPPHPHLVEKILLMPHFQSEKQWYCWYHWTSMVTAQEGYVHWNMIWCSYGQGGQPERVVGNYRMQAWMWLFWHIINCDMQFEANNGVTHTFHEQKGWRLYMQMYVLDMAARLFGMKPVRDIGEWWSERWRNQHGHGKMSMGPKRYCQVSGYEQMFQGQANVQRQVEQNCVGAAGQSPGSACWDHYEVSMDSGVESRGCLSQYNMQIGAPIRPKLDIHCCWFALGFKIVDMTYRPEMLINNKLTPALKDPVWHSMGEMHQIQEHCAFVNNSTPMQLYLTDLDALNELRITTTVSVGFPNPLKDELHVDEPLKHNTFYIELHIIRACMPDCEMPCEFWPIPNKTSPPCQTSNKYNCWGCGPNAHEDHSLAPSETWCGGIFATRICDPKHNWRRFGVLPQHIDCNVVSKDQKEQRNENWTWGLWWIKPLMMTSPNYSPGVCYICKREFMESCQCVRSFIIGMTYLYKFRFPIIWFNCWNTCCMMWFFQKQMLQQEHHYSIPRKPFDMLADHEYFSHAENAIH
ASSDFMLPWECLLEVCVERKGHRFGYCIKMCSAAPHMLPVWRFEMQGTIWKPNQVDRVAHTGVCVAYAYCNHSVHPGCWNHYVETWMMGTWPLGYNTSPMQERDAWQWPQVILQGRSDTKWTYATPIIGAVVAKMHRLKYSQEFTMRKAWCVDKYGNLEKCWDDDNAAFNGPDVRCAEQKGQNRSYYMTLWYSNITKSLKGASKNKKEDHSRRCWNRFGGCYTIRKFPNDVPVTHDNHPWYCQDMMIWELMETGIYEFWFIRQDYHLIYFYCDETHGAYAPMDEKYSPIKQVTQIVIYITTITFVECTPTFSPPTQQAWYECPVSTVPLRAQVGAFEGCRHMECKVWMQIMVECYFFFPWGWLPYFVCFTFYMQKICGEEEPKNFERHEACNTQSQIWMYPWDKSGRVMGELFAQMHNRCGDCDYDRNLFWVIHACGFQWHCLAYKQHPHHHCKLEEINSCEPGCVSMPMVHMCNLQFYMLAWGWEENTTFFIYIVMASPIGPLGCIPPVFMHIDWTAQAVMYETIFPTATTGISVEMADFWNEYRFETPNWRPMSEFTNFYDIHPTTGNHPYLIDTHACPNGGPMWTQPRKLQTTEHNSDFQFFHWMQYSIIHAGYICRIVYKGKARVDSYSTDCFVTYWPGNQLEAVDTYDCTIIPGCHMQEQTDCVKDELYDDRIWAAQAENDFRWPFIGDYHFESCCYVFIVMFQAGSAHSFIGWHIFMTLHDWSDSQPAEPTVTPDREKVMIMKHKNYSSNCIKNHQHTLLSFTDRYKYCIYLCIMEICPASVRYYGNTWWLGINDTDHILWMMMFTADCHEIYNCMHQVRLAFGQMNFQDFCGVFGGEGEQSNYPLMEPAWIFDLHSGYWPGSDIAPGFMNAKNMGGRMLTQDWFFTGVFKMGFQRPIKRWYLADSWWKYQGWPWWTDQHVQFGRDQDWPSMCEDDMCGRQPTISYNYMVASDVIDIKDHREIYDIEGEQMLDTIRKPHVNQDRFCLWIDCIPLIKLTWTSIGCFDHHERDTQNFKRHGHNWGTQYRVTTTKNTPAHGLGQMVHSEHLFHQRQQLFWIEYHLPRILPNDHTSRIKQFYAPNMTEMGRQYLDLPEDQMQPKPCAVGNAIEVCNPDYTLYTNPYDHEIKMSKQPVSHRTDSEDKKPLMRWAWKNFAPCWLKVCGHKTWRIELNLCYQFWHIAMVDPLHVPSNDSCACIPLQMKCVPFRCADIWDGWTPKFIWQCGCQFDNYLYVNISMTCFWHTPNPRYGRCKREPAFLPFCWGSYLYYSYMSYSETHKHTWMRPDIYGMWFVWCDMAKVKSMMFGTCIMHNLRTLGWPCRLEWWHFDPEYEDDHHTHSTIQRQWQHYQMTVHPCDCPAVCGWSYHTMVMLLQWSDLKNFMLYAPRYGLCSRGQPIYTRWMKNCDQCNWTYLFRCNKHEIEDAPHILKKEYAEYCGFYVNDKHHKVWHPKTPFNAFVENAHWMVRGEWSVVALVCCQGHYLWWFHIKPPHMCRFIEGIFMCGFWLNPPQVFAAKQDAHIACEMTCPCVDISWCAITLPMFTAMCIKNLVITAFRQYPKKVHVGPAKYTLHVAEFWYPWEHVWQAGIWSEFSQVGGGCENQCTPPDGSDCRCWNCGHMFGCAATGCYAGTSSYNENLWSAYSSGSRITTGISFMQATMGNVTWHLSCIGIVYRMNCGRKQYFCTMEHYNQHQWEFMMSMCCEGMKAQGGEGDEKLMEDKVHIMRQKDKMGDNHDDQKTSILPYSHKAFACILVRGLTLRMDHMGWWSIHNNDIASLVPTEETPFWINDGLVIIYQWPDRVHRNGLNDIAYGAADEIFPSIYVLPALIIHFQHIGNNGPPNENEIHPTGEDYQYGLFNLQQWWGLSFMSCSYANIINTYQFHVYDKIQKGDEFHPCSNQMMHMRLQSVMIPIGMSRGAKQLIEVMYFDHLPIFGQRGMHEPRVLPSAGIEYWWWHQSTINTTEDTPWQAEHQFRVFTAFVTFDPPVYPQGDCRIWRSPYGAPGVYSHGFFDGDQKMSFHERNDVNEVWRCYCMPLFMFLSEAPWRALVMKTICECTSGEVCGATWPMSVPPRVRCHNHIYAGQRKRYTAKATQGHPMLRCWIAAGIAGKCCKNSTSCMNCTYKYTVMYVKHHSKECWAGVCIESCSFYIWKMELDWFTIIDGTEVDYRDHCIKKCPPQKMWMVKQVHAGRTSDVLYFDPITFMFVLPAHSNHRHGGAFVMIRQGHRINMPHATMVHMTEVQHAPCTRVDGYPAPSTQLTISYVARGAFRVWMSCNEDPWGPMKSEQQGNITFKHFAQQSYHSKKHQVYEEFCYMGFLAQFIANFEWGYTGFHVDSKAADTRVGGRATPTSYCQARFRDKPKKIFAKSSMGARAENEACLFLLGQNTCNVRNGTWLPANQFLMESVHVHMCFSEGIWRQNEVLKWEIYILMSWVIIKSEWMWGDRLQRHPNHTFTQHPFERPWARQTLKRNNGSYKLFFPAAYMHFTDCVNLTLPGHTPKHVQWYVIINIIKMHYVLSDWKFRSFSEDYANNVVICDWFPQWFKEMGRWWVGSNAKVPGQWGPWSCYYFSKIACNPQDILKTTMKNYGHGHRHCIIAMCNSLDVVICAIKICPMVLSQTFFHYESWSRHCCHNRTYMPWKGILLGFSLRQRVRWHMFNVFQNIVVGPTWAQYLNADREIMKVSMEHATPQIREDAYKGIWFDDDNSHSPFGHEAWWIVIWPKTQKDMITANFWWDL'''
    inlines = x.split('\n')
    first = inlines[0]
    second = inlines[1]
    res = localalignment(first, second)
    print(res)